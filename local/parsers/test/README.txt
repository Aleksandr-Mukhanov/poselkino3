				Руководство по использованию парсеров, разработанных для zediks

Парсеры просты в использовании и не требуют особых навыков для взаимодействия с ними.
Каждый парсер при запуске будет искать файл с настройками config.json в папке, в которой он находится. Если файл не будет найден, то он создаст его, а если в нем не будет настроек для этого конкретного парсера, он добавит их в конец файла.
 
Внутри файла находится список параметров, поменяв который изменится режим работы или отображения информации в парсере. Парсер имеет 12 настроек – 11 индивидуальных (для каждого парсера можно указать отдельно) и 1 общую.
 
Что делают настройки:
1) max_logs_size – максимальный размер файла с логами. При достижении файлом logs.txt данного размера, логгирование событий прекратится. Размер указывается в байтах, по умолчанию 1048760 (10 мегабайт).
Этот параметр позволяет ограничить размер файла логов, так как он увеличивается довольно быстро.

2) use_logs – использовать логгирование данных. При выставлении данного параметра как true, парсер создаст файл logs.txt или допишет данные в его конец, если он уже существует. Внутри файла будет содержаться информация о старте и окончании работы парсера, а также об ошибках, возникших при его работе. По умолчанию выключен.
Логгирование данных необходимо, чтобы выявить ошибки, возникшие во время автономной работы парсера.

3) output_errores – выводить ошибки в процессе работе парсере. Если включено, выводит ошибки, возникшие в процессе работы в консоль. По умолчанию включен.
Данный параметр позволяет в активном режиме наблюдать, какие ошибки возникают при работе парсера.

4) output_plots – выводить сообщения о записи участка. По умолчанию включен.
Этот параметр может понадобиться, если необходимо оставить только информацию о парсинге поселков или об ошибках.

5) output_villages – выводить сообщения о начале и окончании парсинга поселков. По умолчанию включен.
Данный параметр, также как и предыдущий, может понадобиться если необходимо ограничить поток поступающей информации только до нужной в данный момент.

6) use_buffer – сохранять данные из файла перед перезаписью. Когда включен, парсер добавляет отсутствующие в нынешней версии данные из сохраненного файла, работает как на файл поселков, так и на файл участков. Если данный параметр выключен, ранее введенные в файл данные будут стираться. Даже при включении данного параметра, если при парсинге не будет найдено ключевое поле (имя поселка или номер участка), которое есть в предыдущей версии файла, то строка не будет перенесена в новую версию. По умолчанию включен.
Этот параметр может быть необходим, если парсер неправильно обрабатывает и/или записывает данные при повторном запуске.

7) max_copies – максимальное число копий файла, которое может создать парсер. По умолчанию 1.

8) create_new_files – парсер будет создавать копию файла при каждом запуске, до тех пор пока не достигнет предела, заданного max_copies. Если данный параметр включен одновременно с using_buffer, то парсер будет брать данные из оригинального файла. По умолчанию выключен
Это одна из самых полезных функций, которую рекомендовано включить, так как она позволит получать новые данные с сайта, при этом не рискуя потерять существующие вследствие ошибки работы парсера или при удалении данных сайтом.

9) keep_zero_villages – оставлять поселки, в которых нет выставленных на продажу участков. По умолчанию выключен.
Этот параметр может пригодиться, если необходимо собрать данные о всех поселках, даже законченных.

10) base_site_link – ссылка на сайт, с которым связан парсер. Эта ссылка НЕ ПРЕДНАЗНАЧЕНА для изменения, и нужна только на случай если у сайта поменяется домен(при этом сам сайт никак не изменится).

11) village_filename – имя файла поселков без расширения. Можно ставить любое, по умолчанию village_ + имя сайта

12) plots_filename – имя файла поселков без расширения. Так же можно ставить любое, по умолчанию plots_ + имя сайта

Парсеры можно располагать в одной папке, т.к. они могут иметь общий файл с параметрами, не мешая друг другу.


